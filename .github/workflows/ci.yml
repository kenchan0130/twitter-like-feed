name: CI
on:
  push:
    branches:
      - master
    tags:
      - "!*"
    paths-ignore:
      - "**.md"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Get go version
        id: go-version
        run: |
          GO_VERSION=$(grep -E '^go ' go.mod | awk '{print $2}')
          echo "Go version is ${GO_VERSION}."
          echo "GO_VERSION=${GO_VERSION}" >> ${GITHUB_OUTPUT}
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.go-version.outputs.GO_VERSION }}
      - name: cache
        uses: actions/cache@v3.3.1
        id: cache-go
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.go-version }}
      - name: Get dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: |
          go get -v -t -d ./...
      - name: Test
        run: |
          go test -v ./...
        env:
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
      - name: Build
        run: |
          go build -v ./main.go

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.4.0
        with:
          version: latest

  deploy:
    needs:
      - test
      - lint
    if: contains(github.ref, 'master')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.RENDER_COM_DEPLOY_HOOK_URL }}
          method: 'GET'
